clear
clc
%problem 3-7
%
%cartisian robot
%DH parameters
% 
% +---+-----------+-----------+-----------+-----------+
% | i | theta     | d         | a         | alpha     |
% +---+-----------+-----------+-----------+-----------+
% | 1 | 0         | d1        | 0         | -90       |
% | 2 | 90        | d2        | 0         | 90        |
% | 3 | -90       | d3        | 0         | 0         |
% +---+-----------+-----------+-----------+-----------+

%general case
syms theta alpha d

A =    [cos(theta)     -sin(theta)*cos(alpha)     sin(theta)*sin(alpha)     0;
        sin(theta)     cos(theta)*cos(alpha)     -cos(theta)*sin(alpha)     0;
            0              sin(alpha)                  cos(alpha)           d;
            0                     0                           0             1];

%initalize DH parameters
theta1 = 0;
theta2 = pi/2;
theta3 = -pi/2;

alpha1 = -pi/2;
alpha2 = pi/2;
alpha3 = 0;

a1 = 0;
a2 = 0;
a3 = 0;

syms d1 d2 d3

A_01 = subs(A,{theta, alpha, d},{theta1,alpha1, d1});  
A_12 = subs(A,{theta, alpha, d},{theta2,alpha2, d2});        
A_23 = subs(A,{theta, alpha, d},{theta3,alpha3, d3});
         
         
%forward kinematics 

A_total = simplify(A_01 * A_12 * A_23)

%if d is given:
%    At2 = sub(A_total, {d1,d2,d3},{d1,d2,d3})

tic = '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
%inverse kinematics
syms Px Py Pz 
eq(1) = 2 == A_total(1,4);
eq(2) = 4 == A_total(2,4);
eq(3) = 7 == A_total(3,4);

sol = solve(eq, [d1, d2, d3]);
d1 = double(sol.d1)
d2 = double(sol.d2)
d3 = double(sol.d3)
q=[d1 d2 d3]
toc = '%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'

%simulation using peter corke

%L(i)= Link ( [ theta  d    a   alpha]);

L(1) = Link ( [ 0       0     d1  -pi/2   1]);
L(2) = Link ( [ -pi/2   d2    0   pi/2    1]);
L(3) = Link ( [ -pi/2   d3    0   0       1]);
L(1).qlim = ([0 40]);   %set limits for links
L(2).qlim = ([0 40]);
L(3).qlim = ([0 40]);


Robot = SerialLink (L);
Robot.name = 'mennaAmir';
Robot

Robot.plot (q)
